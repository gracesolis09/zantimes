{"version":3,"sources":["style.scss","style.css","../../assets/scss/abstract/_mixins.scss"],"names":[],"mappings":"AAGA;EACI,cAAA;EACA,mBAAA;EACA,eAAA;EACA,2BAAA;CCFH;ADIG;EACI,qBAAA;EAAA,qBAAA;EAAA,cAAA;EACA,yBAAA;EAAA,sBAAA;EAAA,mBAAA;CCFP;ADIO;EACI,kBAAA;CCFX;ADKO;EACI,oBAAA;EACA,YAAA;EACA,aAAA;EACA,uBAAA;EAAA,oBAAA;CCHX;ADMO;EACI,oBAAA;EACA,gBAAA;CCJX;ACmEG;EF1DI;IACI,mCAAA;GCNT;CACF;AC4CG;EFlCI;IACI,+BAAA;GCPT;CACF;AC2BG;EFhBI;IACI,+BAAA;GCRT;CACF;ACIG;EFtCJ;IA8CQ,kBAAA;GCRL;EDUK;IACI,oBAAA;IAAA,gBAAA;IACA,yBAAA;IAAA,sBAAA;IAAA,mBAAA;IACA,yBAAA;IAAA,sBAAA;IAAA,wBAAA;IACA,mBAAA;GCRT;EDUS;IACI,oBAAA;GCRb;CACF","file":"style.min.css","sourcesContent":["@import '../../assets/scss/abstract/variables';\n@import '../../assets/scss/abstract/mixins';\n\n.zantimes-icontext {\n    display: grid;\n    margin: 100px auto;\n    gap: 5rem 1rem;\n    grid-template-columns: 1fr;\n\n    &__block {\n        display: flex;\n        align-items: start;\n\n        &-content {\n            margin-left: 1rem;\n        }\n\n        &-icon {\n            margin: 0 auto 16px;\n            width: 80px;\n            height: 65px;\n            object-fit: contain;\n        }\n\n        &-title {\n            margin-bottom: 1rem;\n            font-size: 24px;\n        }\n    }\n\n    @include respond-to(lg-up) {\n        &--3cols {\n            grid-template-columns: 1fr 1fr 1fr;\n        }\n    }\n\n    @include respond-to(md-up) {\n        &--2cols {\n            grid-template-columns: 1fr 1fr;\n        }\n    }\n\n    @include respond-to(md-down) {\n        &--3cols {\n            grid-template-columns: 1fr 1fr;\n        }\n    }\n\n    @include respond-to(sm-down) {\n        margin: 40px auto;\n\n        &__block {\n            flex-wrap: wrap;\n            align-items: start;\n            justify-content: center;\n            text-align: center;\n\n            &-img {\n                margin-bottom: 1rem;\n            }\n        }\n    }\n}",".zantimes-icontext {\n  display: grid;\n  margin: 100px auto;\n  gap: 5rem 1rem;\n  grid-template-columns: 1fr;\n}\n.zantimes-icontext__block {\n  display: flex;\n  align-items: start;\n}\n.zantimes-icontext__block-content {\n  margin-left: 1rem;\n}\n.zantimes-icontext__block-icon {\n  margin: 0 auto 16px;\n  width: 80px;\n  height: 65px;\n  object-fit: contain;\n}\n.zantimes-icontext__block-title {\n  margin-bottom: 1rem;\n  font-size: 24px;\n}\n@media screen and (min-width: 992px) {\n  .zantimes-icontext--3cols {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n}\n@media screen and (min-width: 768px) {\n  .zantimes-icontext--2cols {\n    grid-template-columns: 1fr 1fr;\n  }\n}\n@media screen and (max-width: 991px) {\n  .zantimes-icontext--3cols {\n    grid-template-columns: 1fr 1fr;\n  }\n}\n@media screen and (max-width: 767px) {\n  .zantimes-icontext {\n    margin: 40px auto;\n  }\n  .zantimes-icontext__block {\n    flex-wrap: wrap;\n    align-items: start;\n    justify-content: center;\n    text-align: center;\n  }\n  .zantimes-icontext__block-img {\n    margin-bottom: 1rem;\n  }\n}","@mixin on-event($self: false) {\n    @if $self{\n     &,\n     &:active,\n     &:focus,\n     &:hover {\n       @content;\n     }\n   }\n   @else {\n     &:active,\n     &:focus,\n     &:hover {\n       @content;\n     }\n   }\n }\n \n @mixin when-inside($context) {\n   #{$context} & {\n     @content;\n   }\n }\n @mixin font-face($fontFamily, $path, $fileName, $svgLabel, $fontWeight: normal, $fontStyle: normal) {\n    @font-face{\n     font-family: $fontFamily;\n     src: url('#{$path + $fileName}.eot');\n     src: url('#{$path + $fileName}.eot?#iefix') format('embedded-opentype'), url('#{$path + $fileName}.woff') format('woff'), url('#{$path + $fileName}.ttf') format('truetype'), url('#{$path + $fileName}.svg##{$svgLabel}') format('svg');\n     font-weight: $fontWeight;\n     font-style: $fontStyle;\n     font-display: swap;\n   }\n }\n @mixin respond-to($breakpoint) {\n  @if $breakpoint == \"xs\" {\n    @media screen and (max-width: 575px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"sm-down\" {\n    @media screen and (max-width: 767px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"sm\" {\n    @media (min-width: 576px) and (max-width: 767px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"sm-up\" {\n    @media screen and (min-width: 576px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"md-down\" {\n    @media screen and (max-width: 991px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"md\" {\n    @media (min-width: 768px) and (max-width: 991px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"md-up\" {\n    @media screen and (min-width: 768px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"lg-down\" {\n    @media screen and (max-width: 1199px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"lg\" {\n    @media (min-width: 992px) and (max-width: 1199px) {\n      @content;\n    }\n  }\n \n  @else if $breakpoint == \"lg-up\" {\n    @media screen and (min-width: 992px) {\n      @content;\n    }\n  }\n \n  @else if $breakpoint == \"xl\" {\n    @media screen and (min-width: 1200px) {\n      @content;\n    }\n  }\n\n  @else if $breakpoint == \"xxl\" {\n    @media screen and (min-width: 1400px) {\n      @content;\n    }\n  }\n}\n\n@mixin placeholder() {\n    &::-webkit-input-placeholder {@content}\n    &:-moz-placeholder           {@content}\n    &::-moz-placeholder          {@content}\n    &:-ms-input-placeholder      {@content}\n}\n  "]}